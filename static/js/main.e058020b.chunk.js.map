{"version":3,"sources":["components/Button.tsx","components/Place.tsx","containers/Welcome/index.tsx","assets/cross.svg","assets/tick.svg","assets/checkbox.svg","assets/checkboxChecked.svg","utils/zeroPadding.ts","assets/crossBlack.svg","assets/greenTick.svg","containers/Confirm/AutoLeaveModal.tsx","containers/Confirm/LeaveModal.tsx","components/DatePicker.tsx","containers/Confirm/TimePickModal.tsx","containers/Confirm/index.tsx","assets/back.svg","assets/qrOverlay.svg","containers/QR/index.tsx","utils/qrDecode.ts","assets/plus.svg","components/PWAPrompt.tsx","App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["ConfirmButton","styled","button","props","disabled","shadowed","ModalConfirmButton","Place","input","Welcome","place","setPlace","useEffect","PageWrapper","ContentWrapper","Msg","value","onChange","e","target","placeholder","ActionWrapper","to","StyledLink","div","Link","zeroPadding","String","slice","AutoLeaveModal","isModalOpen","onCancel","onConfirm","selectedAutoLeaveHour","date","useState","autoLeaveHourTmp","setAutoLeaveHourTmp","useMemo","toDate","Date","setHours","getHours","fromMonth","getMonth","fromDay","getDate","fromHour","fromMinute","getMinutes","toMonth","toDay","toHour","toMinute","isOpen","onRequestClose","style","overlay","backgroundColor","content","outline","border","padding","borderRadius","width","position","top","left","transform","height","overflow","ariaHideApp","CrossWrapper","Cross","src","crossBlack","onClick","Title","HourListWrapper","HourList","map","hour","HourListItem","SelectedTick","greenTick","TimeWrapper","img","h1","ul","li","LeaveModal","onLeaveNow","onLeaved","GreenButton","DatePicker","forwardRef","ref","useImperativeHandle","init","ele","document","querySelector","Picker","inline","rows","Wrapper","className","TimePickModal","datePickerRef","useRef","onAfterOpen","current","TimePickerWrapper","Confirm","browserHistory","useHistory","autoLeave","setAutoLeave","autoLeaveHour","setAutoLeaveHour","isAutoLeaveModalOpen","setIsAutoLeaveModalOpen","isLeaveModalOpen","setIsLeaveModalOpen","isTimePickModalOpen","setIsTimePickModalOpen","push","year","getFullYear","month","day","minute","handleLeavePage","cross","readOnly","Time","Tick","tick","AutoLeave","CheckBoxWrapper","CheckBox","checkboxChecked","checkbox","prev","Change","QR","Header","BackButton","back","Overlay","Message","VideoContainer","StyledScanner","onDecode","data","startsWith","json","JSON","parse","window","atob","substring","console","log","decodeURIComponent","escape","nameZh","qrDecode","constraints","audio","video","facingMode","Scanner","qrOverlay","PWAPrompt","AddIcon","plus","InstructionWrapper","App","isPWA","setPWA","matchMedia","matches","test","location","hash","hostname","root","disableBodyScroll","GlobalStyle","basename","exact","path","createGlobalStyle","isLocalhost","Boolean","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.e058020b.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const ConfirmButton = styled.button<{ shadowed?: boolean }>`\n  display: block;\n  margin: auto;\n  margin-bottom: 16px;\n  font-size: 24px;\n  padding: 10px 0;\n  width: 80%;\n  border-radius: 48px;\n  ${(props) =>\n    props.disabled\n      ? `background-color: #D3D3D3;\n        color: #A1A1A1;\n        `\n      : `\n        background-color: #fed426;\n      `}\n\n  border: 0;\n  outline: none;\n  ${(props) =>\n    props.shadowed ? \"box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.5);\" : \"\"}\n\n  &:focus {\n    outline: none;\n    text-decoration: none;\n  }\n`;\n\nexport const ModalConfirmButton = styled(ConfirmButton)`\n  font-size: 16px;\n  padding: 12px 0;\n  width: 90%;\n`;\n","import styled from \"styled-components\";\n\nexport const Place = styled.input`\n  text-align: center;\n  font-size: 32px;\n  background-color: transparent;\n  border: 0;\n  outline: none;\n  margin: 8px 0;\n  color: #fed426;\n  text-shadow: 0px 1px 2px rgba(0, 0, 0, 0.8);\n\n  &:focus {\n    outline: none;\n  }\n`;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { ConfirmButton } from \"../../components/Button\";\nimport { Place } from \"../../components/Place\";\n\ntype Props = {\n  place: string;\n  setPlace: (input: string) => void;\n};\n\nexport const Welcome = ({ place, setPlace }: Props) => {\n  useEffect(() => {\n    setPlace(\"\");\n  }, [setPlace]);\n\n  return (\n    <PageWrapper>\n      <ContentWrapper>\n        <Msg>我想去</Msg>\n        <Place\n          value={place}\n          onChange={(e) => setPlace(e.target.value)}\n          placeholder=\"輸入地址\"\n        />\n      </ContentWrapper>\n      <ActionWrapper>\n        {place === \"\" ? (\n          <ConfirmButton disabled shadowed>\n            話去就去!\n          </ConfirmButton>\n        ) : (\n          <Link to=\"/confirm\">\n            <ConfirmButton shadowed>話去就去!</ConfirmButton>\n          </Link>\n        )}\n        <StyledLink to=\"/qr\">掃瞄二維碼</StyledLink>\n      </ActionWrapper>\n    </PageWrapper>\n  );\n};\n\nconst PageWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  text-shadow: 0px 1px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst ContentWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst Msg = styled.div`\n  color: #ffffff;\n  text-align: center;\n  font-size: 15px;\n`;\n\nconst ActionWrapper = styled.div`\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  text-align: center;\n  color: #fff;\n  padding-bottom: 40px;\n`;\n\nconst StyledLink = styled(Link)`\n  color: #ffffff;\n`;\n","export default __webpack_public_path__ + \"static/media/cross.d2bbc7f7.svg\";","export default __webpack_public_path__ + \"static/media/tick.6d45b966.svg\";","export default __webpack_public_path__ + \"static/media/checkbox.7f6c2da0.svg\";","export default __webpack_public_path__ + \"static/media/checkboxChecked.dad8859a.svg\";","export const zeroPadding = (input: string | number) =>\n  (\"00\" + String(input)).slice(-2);\n","export default __webpack_public_path__ + \"static/media/crossBlack.aafc0aee.svg\";","export default __webpack_public_path__ + \"static/media/greenTick.5e528318.svg\";","import React, { useState, useEffect, useMemo } from \"react\";\nimport Modal from \"react-modal\";\nimport crossBlack from \"../../assets/crossBlack.svg\";\nimport greenTick from \"../../assets/greenTick.svg\";\n\nimport styled from \"styled-components\";\nimport { ModalConfirmButton } from \"../../components/Button\";\nimport { zeroPadding } from \"../../utils/zeroPadding\";\n\ntype Props = {\n  isModalOpen: boolean;\n  onCancel: () => void;\n  onConfirm: (value: number) => void;\n  selectedAutoLeaveHour: number;\n  date: Date;\n};\n\nexport const AutoLeaveModal = ({\n  isModalOpen,\n  onCancel,\n  onConfirm,\n  selectedAutoLeaveHour,\n  date,\n}: Props) => {\n  const [autoLeaveHourTmp, setAutoLeaveHourTmp] = useState(\n    selectedAutoLeaveHour\n  );\n\n  useEffect(() => {\n    setAutoLeaveHourTmp(selectedAutoLeaveHour);\n  }, [setAutoLeaveHourTmp, selectedAutoLeaveHour]);\n\n  const handleConfirm = () => {\n    onConfirm(autoLeaveHourTmp);\n  };\n\n  const {\n    fromMonth,\n    fromDay,\n    fromHour,\n    fromMinute,\n    toMonth,\n    toDay,\n    toHour,\n    toMinute,\n  } = useMemo(() => {\n    const toDate = new Date(date);\n    toDate.setHours(date.getHours() + autoLeaveHourTmp);\n\n    return {\n      fromMonth: date.getMonth() + 1,\n      fromDay: date.getDate(),\n      fromHour: date.getHours(),\n      fromMinute: date.getMinutes(),\n\n      toMonth: toDate.getMonth() + 1,\n      toDay: toDate.getDate(),\n      toHour: toDate.getHours(),\n      toMinute: toDate.getMinutes(),\n    };\n  }, [date, autoLeaveHourTmp]);\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      onRequestClose={onCancel}\n      style={{\n        overlay: {\n          backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n        },\n        content: {\n          outline: \"none\",\n          border: \"0\",\n          padding: \"16px\",\n          borderRadius: \"8px\",\n          width: \"240px\",\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          height: \"370px\",\n          overflow: \"hidden\",\n        },\n      }}\n      ariaHideApp={false}\n    >\n      <CrossWrapper>\n        <Cross src={crossBlack} onClick={onCancel} />\n      </CrossWrapper>\n      <Title>設罝自動離開時間</Title>\n      <HourListWrapper>\n        <HourList>\n          {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((hour) => (\n            <HourListItem\n              onClick={() => {\n                setAutoLeaveHourTmp(hour);\n              }}\n            >\n              + {hour}小時\n              {autoLeaveHourTmp === hour && <SelectedTick src={greenTick} />}\n            </HourListItem>\n          ))}\n        </HourList>\n      </HourListWrapper>\n      <TimeWrapper>\n        <div>\n          於{zeroPadding(fromMonth)}-{zeroPadding(fromDay)}{\" \"}\n          {zeroPadding(fromHour)}:{zeroPadding(fromMinute)} 進入場所\n        </div>\n        <div>\n          於{zeroPadding(toMonth)}-{zeroPadding(toDay)} {zeroPadding(toHour)}:\n          {zeroPadding(toMinute)} 自動離開\n        </div>\n      </TimeWrapper>\n      <ModalConfirmButton onClick={handleConfirm}>確認</ModalConfirmButton>\n    </Modal>\n  );\n};\n\nconst Cross = styled.img`\n  height: 20px;\n`;\n\nconst CrossWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n`;\n\nconst Title = styled.h1`\n  font-size: 20px;\n  text-align: center;\n  margin-top: 20px;\n  margin-bottom: 0;\n`;\n\nconst HourListWrapper = styled.div`\n  overflow: auto;\n  height: 180px;\n  padding: 0 8px;\n`;\n\nconst HourList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst HourListItem = styled.li`\n  line-height: 40px;\n  border-bottom: 1px #eeeeee solid;\n  padding: 0 8px;\n`;\n\nconst TimeWrapper = styled.div`\n  font-size: 12px;\n  text-align: center;\n  padding: 16px 0;\n`;\n\nconst SelectedTick = styled.img`\n  height: 32px;\n  position: relative;\n  float: right;\n  top: 4px;\n`;\n","import React from \"react\";\nimport Modal from \"react-modal\";\nimport crossBlack from \"../../assets/crossBlack.svg\";\n\nimport styled from \"styled-components\";\nimport { ModalConfirmButton } from \"../../components/Button\";\n\ntype Props = {\n  isModalOpen: boolean;\n  onCancel: () => void;\n  onLeaveNow: () => void;\n  onLeaved: () => void;\n};\n\nexport const LeaveModal = ({\n  isModalOpen,\n  onCancel,\n  onLeaveNow,\n  onLeaved,\n}: Props) => {\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      onRequestClose={onCancel}\n      style={{\n        overlay: {\n          backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n        },\n        content: {\n          outline: \"none\",\n          border: \"0\",\n          padding: \"16px\",\n          borderRadius: \"8px\",\n          width: \"240px\",\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          height: \"280px\",\n          overflow: \"hidden\",\n        },\n      }}\n      ariaHideApp={false}\n    >\n      <CrossWrapper>\n        <Cross src={crossBlack} onClick={onCancel} />\n      </CrossWrapper>\n      <Title>你現在要離開嗎？</Title>\n      <ModalConfirmButton onClick={onLeaveNow}>\n        是的，我現在要離開\n      </ModalConfirmButton>\n      <GreenButton onClick={onLeaved}>我現已經離開了</GreenButton>\n    </Modal>\n  );\n};\n\nconst Cross = styled.img`\n  height: 20px;\n`;\n\nconst CrossWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n`;\n\nconst Title = styled.div`\n  font-size: 20px;\n  text-align: center;\n  margin: 56px 0;\n`;\n\nconst GreenButton = styled(ModalConfirmButton)`\n  background-color: #12b188;\n  color: #fff;\n`;\n","import React, { forwardRef, useImperativeHandle } from \"react\";\n\nimport styled from \"styled-components\";\nimport Picker from \"pickerjs\";\nimport \"pickerjs/dist/picker.min.css\";\n\nexport type DatePickerHandler = {\n  init: () => void;\n};\n\nexport const DatePicker = forwardRef((props: any, ref: any) => {\n  // mount effect wont work on model, need to call this after onAfterOpen event\n  useImperativeHandle(ref, () => ({\n    init: () => {\n      const ele = document.querySelector(\n        \".js-inline-picker\"\n      ) as HTMLElement | null;\n      if (!ele) return;\n      new Picker(ele, {\n        inline: true,\n        rows: 2,\n      });\n    },\n  }));\n\n  return (\n    <Wrapper>\n      <div className=\"js-inline-picker\" />\n    </Wrapper>\n  );\n});\n\nconst Wrapper = styled.div`\n  & .picker {\n    font-size: 12px;\n  }\n\n  & .picker-dialog {\n    border: 0;\n  }\n\n  & .picker-cell:before {\n    background-image: unset;\n  }\n\n  & .picker-cell:after {\n    background-image: unset;\n  }\n\n  & .picker-picked {\n    color: unset;\n    border-top: #12b188 1px solid;\n    border-bottom: #12b188 1px solid;\n  }\n\n  & .picker-cell {\n    padding: 0 4px;\n  }\n\n  & .picker-item {\n    padding: 3px 0px;\n  }\n\n  & .picker-cell + .picker-cell {\n    border: 0;\n  }\n`;\n","import React, { useRef } from \"react\";\nimport Modal from \"react-modal\";\nimport crossBlack from \"../../assets/crossBlack.svg\";\n\nimport styled from \"styled-components\";\nimport { ModalConfirmButton } from \"../../components/Button\";\nimport { DatePicker, DatePickerHandler } from \"../../components/DatePicker\";\n\ntype Props = {\n  isModalOpen: boolean;\n  onCancel: () => void;\n  onConfirm: () => void;\n};\n\nexport const TimePickModal = ({ isModalOpen, onCancel, onConfirm }: Props) => {\n  const datePickerRef = useRef<DatePickerHandler>(null);\n\n  const initPicker = () => {\n    datePickerRef.current && datePickerRef.current.init();\n  };\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      onRequestClose={onCancel}\n      style={{\n        overlay: {\n          backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n        },\n        content: {\n          outline: \"none\",\n          border: \"0\",\n          padding: \"16px\",\n          borderRadius: \"8px\",\n          width: \"240px\",\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          height: \"280px\",\n          overflow: \"hidden\",\n        },\n      }}\n      ariaHideApp={false}\n      onAfterOpen={initPicker}\n    >\n      <CrossWrapper>\n        <Cross src={crossBlack} onClick={onCancel} />\n      </CrossWrapper>\n      <Title>你是什麼時候離開？</Title>\n      <TimePickerWrapper>\n        <DatePicker ref={datePickerRef} />\n      </TimePickerWrapper>\n      <ModalConfirmButton onClick={onConfirm}>確認</ModalConfirmButton>\n    </Modal>\n  );\n};\n\nconst Cross = styled.img`\n  height: 20px;\n`;\n\nconst CrossWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n`;\n\nconst Title = styled.div`\n  font-size: 20px;\n  text-align: center;\n  margin-top: 24px;\n`;\n\nconst TimePickerWrapper = styled.div`\n  border-bottom: 1px #eeeeee solid;\n  border-top: 1px #eeeeee solid;\n  padding: 32px 0;\n  margin: 16px 0;\n`;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport styled from \"styled-components\";\nimport cross from \"../../assets/cross.svg\";\n\nimport tick from \"../../assets/tick.svg\";\nimport checkbox from \"../../assets/checkbox.svg\";\nimport checkboxChecked from \"../../assets/checkboxChecked.svg\";\n\nimport { Link, useHistory } from \"react-router-dom\";\nimport { ConfirmButton } from \"../../components/Button\";\nimport { zeroPadding } from \"../../utils/zeroPadding\";\nimport { Place } from \"../../components/Place\";\nimport { AutoLeaveModal } from \"./AutoLeaveModal\";\nimport { LeaveModal } from \"./LeaveModal\";\nimport { TimePickModal } from \"./TimePickModal\";\n\ntype Props = {\n  place: string;\n};\n\nexport const Confirm = ({ place }: Props) => {\n  const browserHistory = useHistory();\n  const [autoLeave, setAutoLeave] = useState(false);\n  const [autoLeaveHour, setAutoLeaveHour] = useState(4);\n  const [isAutoLeaveModalOpen, setIsAutoLeaveModalOpen] = useState(false);\n  const [isLeaveModalOpen, setIsLeaveModalOpen] = useState(false);\n  const [isTimePickModalOpen, setIsTimePickModalOpen] = useState(false);\n\n  useEffect(() => {\n    if (place === \"\") browserHistory.push(\"/\");\n  }, [place, browserHistory]);\n\n  const { date, year, month, day, hour, minute } = useMemo(() => {\n    const date = new Date();\n    return {\n      date,\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      day: date.getDate(),\n      hour: date.getHours(),\n      minute: date.getMinutes(),\n    };\n  }, []);\n\n  const handleCheckBoxClick = () => {\n    setAutoLeave((prev) => !prev);\n  };\n\n  const handleSetAutoLeaveHour = (value: number) => {\n    setAutoLeaveHour(value);\n    setIsAutoLeaveModalOpen(false);\n  };\n\n  const handleLeavePage = () => {\n    browserHistory.push(\"/\");\n  };\n\n  const handleLeaved = () => {\n    setIsLeaveModalOpen(false);\n    setIsTimePickModalOpen(true);\n  };\n\n  return (\n    <PageWrapper>\n      <Link to=\"/\">\n        <Cross src={cross} />\n      </Link>\n      <ContentWrapper>\n        <Msg>你已進入場所</Msg>\n        <Place value={place} readOnly />\n        <Time>{`${year}-${zeroPadding(month)}-${zeroPadding(day)} ${zeroPadding(\n          hour\n        )}:${zeroPadding(minute)}`}</Time>\n        <Tick src={tick} />\n      </ContentWrapper>\n      <ActionWrapper>\n        <AutoLeave>\n          <CheckBoxWrapper>\n            <CheckBox\n              src={autoLeave ? checkboxChecked : checkbox}\n              onClick={handleCheckBoxClick}\n            />\n            {autoLeaveHour}小時後自動離開\n          </CheckBoxWrapper>\n          <Change\n            onClick={() => {\n              setIsAutoLeaveModalOpen(true);\n            }}\n          >\n            變更\n          </Change>\n        </AutoLeave>\n        <ConfirmButton\n          shadowed\n          onClick={() => {\n            setIsLeaveModalOpen(true);\n          }}\n        >\n          離開\n        </ConfirmButton>\n        <div>當你離開時請緊記按\"離開\"</div>\n      </ActionWrapper>\n      <AutoLeaveModal\n        isModalOpen={isAutoLeaveModalOpen}\n        onCancel={() => {\n          setIsAutoLeaveModalOpen(false);\n        }}\n        onConfirm={handleSetAutoLeaveHour}\n        selectedAutoLeaveHour={autoLeaveHour}\n        date={date}\n      />\n      <LeaveModal\n        isModalOpen={isLeaveModalOpen}\n        onCancel={() => {\n          setIsLeaveModalOpen(false);\n        }}\n        onLeaveNow={handleLeavePage}\n        onLeaved={handleLeaved}\n      />\n      <TimePickModal\n        isModalOpen={isTimePickModalOpen}\n        onCancel={() => {\n          setIsTimePickModalOpen(false);\n        }}\n        onConfirm={handleLeavePage}\n      />\n    </PageWrapper>\n  );\n};\n\nconst PageWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  text-shadow: 0px 1px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst Cross = styled.img`\n  height: 20px;\n  float: right;\n  position: absolute;\n  top: 24px;\n  right: 24px;\n`;\n\nconst Tick = styled.img`\n  margin: auto;\n  margin-top: 80px;\n  width: 32%;\n`;\n\nconst ContentWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst Msg = styled.div`\n  color: #ffffff;\n  text-align: center;\n  font-size: 15px;\n  margin-top: 120px;\n`;\n\nconst Time = styled.div`\n  color: #ffffff;\n  text-align: center;\n`;\n\nconst ActionWrapper = styled.div`\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  text-align: center;\n  color: #fff;\n  padding-bottom: 40px;\n`;\n\nconst AutoLeave = styled.div`\n  margin-bottom: 16px;\n  width: 100%;\n  display: flex;\n`;\n\nconst CheckBoxWrapper = styled.div`\n  width: 100%;\n  text-align: left;\n  padding-left: 24px;\n  line-height: 32px;\n`;\n\nconst Change = styled.div`\n  flex-shrink: 0;\n  padding-right: 24px;\n  line-height: 32px;\n`;\n\nconst CheckBox = styled.img`\n  height: 32px;\n  display: inline-block;\n  vertical-align: top;\n  margin-right: 8px;\n`;\n","export default __webpack_public_path__ + \"static/media/back.7bf7a56f.svg\";","export default __webpack_public_path__ + \"static/media/qrOverlay.185cc3ea.svg\";","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Scanner from \"react-webcam-qr-scanner\";\nimport styled from \"styled-components\";\nimport back from \"../../assets/back.svg\";\nimport { qrDecode } from \"../../utils/qrDecode\";\nimport qrOverlay from \"../../assets/qrOverlay.svg\";\n\ntype Props = {\n  setPlace: (input: string) => void;\n};\n\nexport const QR = ({ setPlace }: Props) => {\n  const browserHistory = useHistory();\n\n  const handleScan = ({ data }: { data: string }) => {\n    if (!data) return;\n    const place = qrDecode(data);\n    if (place !== \"\") {\n      setPlace(place);\n      browserHistory.push(\"/confirm\");\n    }\n  };\n\n  return (\n    <>\n      <Header>\n        <Link to=\"/\">\n          <BackButton src={back} />\n        </Link>\n        掃瞄二維碼\n      </Header>\n      <Overlay />\n      <Message>掃瞄二維碼</Message>\n      <VideoContainer>\n        <StyledScanner\n          onDecode={handleScan}\n          constraints={{\n            audio: false,\n            video: {\n              facingMode: \"environment\",\n            },\n          }}\n        />\n      </VideoContainer>\n    </>\n  );\n};\n\nconst BackButton = styled.img`\n  height: 20px;\n  top: 14px;\n  left: 16px;\n  position: absolute;\n`;\n\nconst Header = styled.div`\n  width: 100%;\n  position: absolute;\n  z-index: 100;\n  color: #ffffff;\n  background-color: #12b188;\n  text-align: center;\n  line-height: 48px;\n  text-shadow: 0px 1px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst VideoContainer = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n`;\n\nconst StyledScanner = styled(Scanner)`\n  /* Make video to at least 100% wide and tall */\n  min-width: 100%;\n  min-height: 100%;\n\n  /* Setting width & height to auto prevents the browser from stretching or squishing the video */\n  width: auto;\n  height: auto;\n\n  /* Center the video */\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst Overlay = styled.div`\n  /* The image used */\n  background-image: url(\"${qrOverlay}\");\n\n  /* Full height */\n  height: 100%;\n\n  /* Center and scale the image nicely */\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n\n  z-index: 50;\n  position: relative;\n`;\n\nconst Message = styled.div`\n  position: absolute;\n  z-index: 51;\n  bottom: 25%;\n  width: 100%;\n  text-align: center;\n  color: #ffffff;\n  font-size: 16px;\n`;\n","type DecodedJSON = {\n  hash: string;\n  metadata: { typeEn: string; typeZh: string };\n  nameEn: string;\n  nameZh: string;\n  type: string;\n};\n\n// https://github.com/aaasssdddwww/back-home-safe/pull/7\nexport const qrDecode = (input: string): string => {\n  if (!input.startsWith(\"HKEN:\")) return \"\";\n  const json: DecodedJSON = JSON.parse(window.atob(input.substring(14)));\n  console.log(json);\n  return decodeURIComponent(escape(json.nameZh));\n};\n","export default __webpack_public_path__ + \"static/media/plus.abd4712a.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport plus from \"../../src/assets/plus.svg\";\n\nexport const PWAPrompt = () => {\n  return (\n    <Wrapper>\n      <AddIcon src={plus} />\n      <div>新增至主畫面先啦</div>\n      <div>唔係點似個App</div>\n      <InstructionWrapper>\n        <div>IOS</div>\n        <div>{\"用Safari開=>分享=>新增至主畫面\"}</div>\n        <div>Android</div>\n        <div>{\"用Chrome開=>右上選項=>新增至主畫面/安裝應用程式\"}</div>\n      </InstructionWrapper>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  justify-content: center;\n  vertical-align: middle;\n  flex-direction: column;\n  text-align: center;\n  color: #fff;\n`;\n\nconst AddIcon = styled.img`\n  width: 100px;\n  margin: 0 auto 32px auto;\n`;\n\nconst InstructionWrapper = styled.div`\n  font-size: 12px;\n  margin-top: 24px;\n`;\n","import React, { useState, useMemo, useEffect } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\n\nimport { Route, HashRouter, Switch, Redirect } from \"react-router-dom\";\nimport { Welcome } from \"./containers/Welcome\";\nimport { Confirm } from \"./containers/Confirm\";\nimport { QR } from \"./containers/QR\";\nimport { PWAPrompt } from \"./components/PWAPrompt\";\nimport { disableBodyScroll } from \"body-scroll-lock\";\n\nfunction App() {\n  const [place, setPlace] = useState(\"\");\n  const [isPWA, setPWA] = useState(false);\n\n  useEffect(() => {\n    setPWA(window.matchMedia(\"(display-mode: standalone)\").matches || /\\bmode=standalone\\b/.test(window.location.hash) || window.location.hostname === \"localhost\");\n  }, []);\n\n  useEffect(() => {\n    const root = document.querySelector(\"#root\");\n    if (!root) return;\n    disableBodyScroll(root);\n  }, []);\n\n  return (\n    <>\n      <GlobalStyle />\n      {isPWA ? (\n        <HashRouter basename=\"/\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Welcome place={place} setPlace={setPlace} />\n            </Route>\n            <Route exact path=\"/qr\">\n              <QR setPlace={setPlace} />\n            </Route>\n            <Route exact path=\"/confirm\">\n              <Confirm place={place} />\n            </Route>\n            <Redirect to=\"/\" />\n          </Switch>\n        </HashRouter>\n      ) : (\n        <PWAPrompt />\n      )}\n    </>\n  );\n}\n\nexport default App;\n\nconst GlobalStyle = createGlobalStyle`\nhtml {\n  width: 100%;\n  height: 100%;\n}\n\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  background-color:#12b188;\n  width: 100%;\n  height: 100%;\n}\n\n\n#root {\n  width: 100%;\n  height: 100%;\n}\n\na {\n  text-decoration: none;\n}\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n"],"sourceRoot":""}